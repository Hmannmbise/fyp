{"remainingRequest":"/home/edwin/Pictures/FYP_FRONT_END/rit-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/edwin/Pictures/FYP_FRONT_END/rit-master/src/modules/Authentication/Login.vue?vue&type=style&index=0&id=37c607f3&scoped=true&lang=css&","dependencies":[{"path":"/home/edwin/Pictures/FYP_FRONT_END/rit-master/src/modules/Authentication/Login.vue","mtime":1652171403694},{"path":"/home/edwin/Pictures/FYP_FRONT_END/rit-master/node_modules/css-loader/dist/cjs.js","mtime":1651266681067},{"path":"/home/edwin/Pictures/FYP_FRONT_END/rit-master/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1651266682379},{"path":"/home/edwin/Pictures/FYP_FRONT_END/rit-master/node_modules/postcss-loader/src/index.js","mtime":1651266681511},{"path":"/home/edwin/Pictures/FYP_FRONT_END/rit-master/node_modules/cache-loader/dist/cjs.js","mtime":1651266680411},{"path":"/home/edwin/Pictures/FYP_FRONT_END/rit-master/node_modules/vue-loader/lib/index.js","mtime":1651266681819}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubm8tdXBwZXJjYXNlIHsKICB0ZXh0LXRyYW5zZm9ybTogdW5zZXQgIWltcG9ydGFudDsKfQo="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA;AACA;AACA","file":"Login.vue","sourceRoot":"src/modules/Authentication","sourcesContent":["<template>\n  <div>\n    <!-- <v-alert\n      v-for=\"err of errors\"\n      :key=\"err.code\"\n      border=\"bottom\"\n      color=\"red\"\n      dismissible\n      elevation=\"21\"\n      icon=\"mdi-alert-circle\"\n      type=\"error\"\n    >\n      {{ err.message }}\n    </v-alert> -->\n    <Login_Page @login-handler=\"loginHandler\" />\n  </div>\n</template>\n\n<script>\nimport Login_Page from \"./LoginContent.vue\";\n\n// creating mutation here\nimport gql from \"graphql-tag\";\nimport router from \"../../router\";\n\nconst LOGIN_QUERY = gql`\n  mutation ($email: String!, $password: String!) {\n    tokenAuth(email: $email, password: $password) {\n      token\n      success\n      errors\n    }\n  }\n`;\n\nexport default {\n  name: \"Login\",\n  components: {\n    Login_Page,\n  },\n  data() {\n    return {\n      errors: [],\n    };\n  },\n  methods: {\n    loginHandler(data) {\n      this.$apollo.mutate({\n        mutation: LOGIN_QUERY,\n        variables: data,\n        update: (cache, { data }) => {\n          console.log(data);\n          if (!data.tokenAuth.errors) {\n            localStorage.setItem(\"token\", data.tokenAuth.token);\n            const Toast = this.$swal.mixin({\n              toast: true,\n              position: \"top-end\",\n              showConfirmButton: false,\n              timer: 3000,\n              timerProgressBar: true,\n              didOpen: (toast) => {\n                toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n                toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n              },\n            });\n\n            Toast.fire({\n              icon: \"success\",\n              title: \"Signed in successfully\",\n            });\n            router.push(\"/home\");\n          } else {\n            let errors = [];\n            for (let e of data.tokenAuth.errors.nonFieldErrors) {\n              errors.push(e);\n            }\n            this.errors = errors;\n            const Toast = this.$swal.mixin({\n              toast: true,\n              position: \"top-end\",\n              showConfirmButton: false,\n              timer: 3000,\n              timerProgressBar: true,\n              didOpen: (toast) => {\n                toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n                toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n              },\n            });\n\n            Toast.fire({\n              icon: \"warning\",\n              title: \"Credential didn't match!\",\n            });\n          }\n        },\n      });\n    },\n  },\n};\n</script>\n<style scoped>\n.no-uppercase {\n  text-transform: unset !important;\n}\n</style>\n"]}]}