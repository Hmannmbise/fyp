{"remainingRequest":"/home/edwin/Pictures/FYP_FRONT_END/rit-master/node_modules/babel-loader/lib/index.js!/home/edwin/Pictures/FYP_FRONT_END/rit-master/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/edwin/Pictures/FYP_FRONT_END/rit-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/edwin/Pictures/FYP_FRONT_END/rit-master/node_modules/vue-tel-input-vuetify/lib/vue-tel-input-vuetify.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/edwin/Pictures/FYP_FRONT_END/rit-master/node_modules/vue-tel-input-vuetify/lib/vue-tel-input-vuetify.vue","mtime":1652094210966},{"path":"/home/edwin/Pictures/FYP_FRONT_END/rit-master/babel.config.js","mtime":1649961924000},{"path":"/home/edwin/Pictures/FYP_FRONT_END/rit-master/node_modules/cache-loader/dist/cjs.js","mtime":1651266680411},{"path":"/home/edwin/Pictures/FYP_FRONT_END/rit-master/node_modules/babel-loader/lib/index.js","mtime":1651266681523},{"path":"/home/edwin/Pictures/FYP_FRONT_END/rit-master/node_modules/cache-loader/dist/cjs.js","mtime":1651266680411},{"path":"/home/edwin/Pictures/FYP_FRONT_END/rit-master/node_modules/vue-loader/lib/index.js","mtime":1651266681819}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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;IACA,CAnBA;IAoBA1B,KApBA,iBAoBA2B,QApBA,EAoBAC,QApBA,EAoBA;MAAA;;MACA;QACA;UACA;;UACA;YACA;UACA;QACA;MACA,CARA,CASA;;;MACA;QACA;UACAC;QACA,CAFA;MAGA;;MAEA;IACA,CArCA;IAsCA5B,aAtCA,yBAsCA3B,KAtCA,EAsCA;MACA;QACA;MACA;IACA;EA1CA,CAhVA;EA4XAwD,OA5XA,qBA4XA;IAAA;;IACA;MAAA;IAAA;IACA;EACA,CA/XA;EAgYAC,OAhYA,qBAgYA;IACA;MACA;IACA;EACA,CApYA;EAqYAC;IACAC,iBADA,+BACA;MAAA;;MACA;QACA;AACA;AACA;QACA;UACA;;UACA;YACA;;YACAC;YACA;UACA;QACA;QACA;AACA;AACA;;;QACA;UACA;;UACA;YACA;;YACAA;YACA;UACA;QACA;;QACA,0EACA,2BADA;QAEA;AACA;AACA;;;QACA;UACAC,aACAC,IADA,CACA;YACA;cACA;YACA;UACA,CALA,EAMAC,KANA,CAMA;YACAvG;YACA;AACA;AACA;;YACA;UACA,CAZA,EAaAwG,OAbA,CAaA;YACAJ;UACA,CAfA;QAgBA,CAjBA,MAiBA;UACA;AACA;AACA;UACA;;UACAA;QACA;MACA,CApDA;IAqDA,CAvDA;;IAwDA;AACA;AACA;IACAK,YA3DA,0BA2DA;MAAA;;MAAA;MACA,YACAC,GADA,CACA;QAAA;MAAA,CADA,EAEAC,MAFA,CAEAC,OAFA;IAGA,CA/DA;IAgEAC,WAhEA,yBAgEA;MAAA;MACA,8BACA;QAAA;MAAA,CADA;IAGA,CApEA;IAqEAC,YArEA,wBAqEAC,KArEA,EAqEA3C,IArEA,EAqEA;MACA;MACA;MACA,6CACA;QAAA;MAAA,CADA;MAGA;QACA4C,wBADA;QAEA,+BAFA;QAGA/B;MAHA;IAKA,CAhFA;IAiFAgC,MAjFA,kBAiFAjC,OAjFA,EAiFA;MAAA;MACA;;MACA,IACA,cACA,qBADA,IAEA,uBAFA,IAGA,mCAJA,EAKA;QACA;QACA,yBACA,mCADA,EAEA,uBAFA,EAGAkC,SAHA,CAGA,eAHA;MAIA,CAXA,MAWA,IACA,qBACA,8BADA,IAEAlC,OAHA,EAIA;QACA;QACA;MACA;;MACA;QACA;QACA,wCAFA,CAEA;MACA;IACA,CA1GA;IA2GAmC,OA3GA,mBA2GAlH,CA3GA,EA2GA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,wCARA,CAQA;MACA;MACA;;MACA;QACA;MACA;IACA,CAzHA;IA0HAmH,MA1HA,oBA0HA;MACA;MACA,qBAFA,CAEA;IACA,CA7HA;IA8HAC,OA9HA,mBA8HAC,KA9HA,EA8HA;MACA;IACA,CAhIA;IAiIAC,OAjIA,mBAiIAD,KAjIA,EAiIA;MACA;IACA,CAnIA;IAoIAE,QApIA,oBAoIAhF,KApIA,EAoIA;MACA;IACA,CAtIA;IAuIAiF,SAvIA,qBAuIAH,KAvIA,EAuIA;MACA;IACA,CAzIA;IA0IAI,WA1IA,uBA0IAJ,KA1IA,EA0IA;MACA;IACA,CA5IA;IA6IAK,SA7IA,qBA6IAL,KA7IA,EA6IA;MACA;IACA,CA/IA;IAgJAM,OAhJA,qBAgJA;MACA;MACA,sBAFA,CAEA;IACA,CAnJA;IAoJAC,OApJA,qBAoJA;MACA;MACA,sBAFA,CAEA;IACA,CAvJA;IAwJAC,KAxJA,mBAwJA;MACA;IACA,CA1JA;IA2JAC,cA3JA,4BA2JA;MACA;QACA;MACA;;MACA;IACA,CAhKA;IAiKAC,cAjKA,4BAiKA;MACA;IACA,CAnKA;IAoKAC,WApKA,uBAoKAhI,CApKA,EAoKA;MAAA;;MACA;QACA;QACAA;QACA;;QACA;UACA;QACA,CAFA,MAEA;UACA,8BACA,+BADA,EAEA,sBAFA;QAIA;;QACA;;QACA,IACAiI,yCACA,wDAFA,EAGA;UACA,+CACA,4BADA,GAEAA,mBAFA;QAGA;MACA,CArBA,MAqBA;QACA;QACAjI;QACA;;QACA;UACA;QACA,CAFA,MAEA;UACA;QACA;;QACA;;QACA;UACA;QACA;MACA,CAbA,MAaA;QACA;QACA;UACA;QACA;;QACA;MACA,CANA,MAMA;QACA;QACA;QACAkI;QACA;UACA;QACA,CAFA,EAEA,GAFA,EAJA,CAOA;;QACA,yCACAC,KADA,CACA,8BADA,EAEAC,SAFA,CAEA;UAAA;QAAA,CAFA;;QAGA;UACA;UACA;UACA;UACA,sEACA,wDADA;;UAEA;YACA;UACA;QACA;MACA;IACA,CAnOA;IAoOAC,KApOA,mBAoOA;MAAA;;MACA;MACA,yBACAhC,IADA,CACA;QACA,IACA,iBACA,mBADA,IAEA,gCAFA,IAGA,6BAJA,EAKA;UACA;QACA;;QACA;;QACA;;QACA,+CAXA,CAWA;;MACA,CAbA,EAcAC,KAdA,CAcAvG,aAdA,EAeAwG,OAfA,CAeA;QACA;MACA,CAjBA;MAkBA;IACA,CAzPA;IA0PA+B,mBA1PA,iCA0PA;MACA;IACA;EA5PA;AArYA","names":["name","directives","bind","el","binding","vNode","warn","console","e","getParents","bubble","path","document","unbind","props","messages","type","errorMessages","successMessages","hint","suffix","prefix","appendIcon","default","backgroundColor","color","rules","loaderHeight","loading","hideDetails","clearable","filled","fullWidth","flat","light","dark","validateOnBlur","outlined","dense","persistentHint","readonly","error","success","shaped","singleLine","rounded","inputHeight","value","label","selectLabel","menuProps","placeholder","persistentPlaceholder","disabledFetchingCountry","disabled","mode","invalidMsg","required","allCountries","defaultCountry","preferredCountries","onlyCountries","ignoredCountries","autocomplete","autofocus","wrapperClasses","textFieldClasses","selectClasses","inputClasses","inputId","inputOptions","maxLen","data","phone","activeCountry","iso2","open","finishMounted","selectedIndex","typeToFindInput","typeToFindTimer","cursorPosition","countryCode","computed","parsedMode","filteredCountries","sortedCountries","country","preferred","phoneObject","toJSON","Object","isValid","result","number","input","phoneText","key","watch","isDropdownOpened","newValue","oldValue","setCaretPosition","mounted","created","methods","initializeCountry","resolve","getCountry","then","catch","finally","getCountries","map","filter","Boolean","findCountry","getItemClass","index","highlighted","choose","getNumber","onInput","onBlur","onFocus","event","onClick","onChange","onMouseUp","onMouseDown","onKeyDown","onEnter","onSpace","focus","toggleDropdown","clickedOutside","keyboardNav","selEle","clearTimeout","slice","findIndex","reset","onChangeCountryCode"],"sourceRoot":"node_modules/vue-tel-input-vuetify/lib","sources":["vue-tel-input-vuetify.vue"],"sourcesContent":["<template>\n  <div :class=\"['vue-tel-input-vuetify', wrapperClasses]\">\n    <div class=\"country-code\">\n      <v-select\n        ref=\"countryInput\"\n        v-model=\"countryCode\"\n        :append-icon=\"appendIcon\"\n        :class=\"selectClasses\"\n        :label=\"selectLabel\"\n        @change=\"onChangeCountryCode\"\n        :items=\"sortedCountries\"\n        :disabled=\"disabled\"\n        :outlined=\"outlined\"\n        :filled=\"filled\"\n        :flat=\"flat\"\n        :light=\"light\"\n        :dark=\"dark\"\n        :readonly=\"readonly\"\n        :shaped=\"shaped\"\n        :rounded=\"rounded\"\n        :background-color=\"backgroundColor\"\n        :color=\"color\"\n        :dense=\"dense\"\n        :menu-props=\"menuProps\"\n        :height=\"inputHeight\"\n        item-text=\"name\"\n        item-value=\"iso2\"\n        return-object\n      >\n        <template v-slot:selection>\n          <div :class=\"activeCountry.iso2.toLowerCase()\" class=\"vti__flag\" />\n        </template>\n        <template v-slot:item=\"data\">\n          <span :class=\"data.item.iso2.toLowerCase()\" class=\"vti__flag\" />\n          <span>{{ data.item.name }} {{ `+${data.item.dialCode}` }}</span>\n        </template>\n      </v-select>\n    </div>\n    <v-text-field\n      ref=\"input\"\n      type=\"tel\"\n      :class=\"textFieldClasses\"\n      :messages=\"messages\"\n      :error-messages=\"errorMessages\"\n      :success-messages=\"successMessages\"\n      :hint=\"hint\"\n      :suffix=\"suffix\"\n      :prefix=\"prefix\"\n      :background-color=\"backgroundColor\"\n      :color=\"color\"\n      :rules=\"rules\"\n      :loader-height=\"loaderHeight\"\n      :loading=\"loading\"\n      :hide-details=\"hideDetails\"\n      :clearable=\"clearable\"\n      :filled=\"filled\"\n      :full-width=\"fullWidth\"\n      :flat=\"flat\"\n      :light=\"light\"\n      :dark=\"dark\"\n      :validate-on-blur=\"validateOnBlur\"\n      :outlined=\"outlined\"\n      :dense=\"dense\"\n      :persistent-hint=\"persistentHint\"\n      :readonly=\"readonly\"\n      :error=\"error\"\n      :success=\"success\"\n      :shaped=\"shaped\"\n      :single-line=\"singleLine\"\n      :rounded=\"rounded\"\n      :value=\"value\"\n      :label=\"label\"\n      :disabled=\"disabled\"\n      :placeholder=\"placeholder\"\n      :persistent-placeholder=\"persistentPlaceholder\"\n      v-model=\"phone\"\n      :autofocus=\"autofocus\"\n      :name=\"name\"\n      :required=\"required\"\n      :autocomplete=\"autocomplete\"\n      :id=\"inputId\"\n      :maxlength=\"maxLen\"\n      :tabindex=\"\n        inputOptions && inputOptions.tabindex ? inputOptions.tabindex : 0\n      \"\n      :height=\"inputHeight\"\n      @input=\"onInput\"\n      @blur=\"onBlur\"\n      @focus=\"onFocus\"\n      @click=\"onClick\"\n      @change=\"onChange\"\n      @mousedown=\"onMouseDown\"\n      @mouseup=\"onMouseUp\"\n      @keydown=\"onKeyDown\"\n      @keyup.enter=\"onEnter\"\n      @keyup.space=\"onSpace\"\n    >\n      <template #append>\n        <slot name=\"append\" />\n      </template>\n      <template #append-outer>\n        <slot name=\"append-outer\" />\n      </template>\n      <template #label>\n        <slot name=\"label\" />\n      </template>\n      <template #message=\"{ key, message }\">\n        <slot name=\"message\" v-bind=\"{ key, message }\" />\n      </template>\n      <template #prepend>\n        <slot name=\"prepend\" />\n      </template>\n      <template #prepend-inner>\n        <slot name=\"prepend-inner\" />\n      </template>\n      <template #progress>\n        <slot name=\"progress\" />\n      </template>\n    </v-text-field>\n  </div>\n</template>\n\n<script>\nimport PhoneNumber from 'awesome-phonenumber';\nimport utils, { getCountry, setCaretPosition } from './utils';\n\nfunction getDefault(key) {\n  return utils.options[key];\n}\n\n// Polyfill for Event.path in IE 11: https://stackoverflow.com/a/46093727\nfunction getParents(node, memo) {\n  const parsedMemo = memo || [];\n  const { parentNode } = node;\n  if (!parentNode) {\n    return parsedMemo;\n  }\n  return getParents(parentNode, parsedMemo.concat(parentNode));\n}\n\nexport default {\n  name: 'VueTelInputVuetify',\n  directives: {\n    // Click-outside by BosNaufal: https://github.com/BosNaufal/vue-click-outside\n    'click-outside': {\n      bind(el, binding, vNode) {\n        // Provided expression must evaluate to a function.\n        if (typeof binding.value !== 'function') {\n          const compName = vNode.context.name;\n          let warn = `[Vue-click-outside:] provided expression ${binding.expression} is not a function, but has to be`;\n          if (compName) {\n            warn += `Found in component ${compName}`;\n          }\n          console.warn(warn);\n        }\n        // Define Handler and cache it on the element\n        const { bubble } = binding.modifiers;\n        const handler = (e) => {\n          // Fall back to composedPath if e.path is undefined\n          const path = e.path\n            || (e.composedPath ? e.composedPath() : false)\n            || getParents(e.target);\n          if (\n            bubble\n            || (path.length && !el.contains(path[0]) && el !== path[0])\n          ) {\n            binding.value(e);\n          }\n        };\n        el.__vueClickOutside__ = handler;\n        // add Event Listeners\n        document.addEventListener('click', handler);\n      },\n      unbind(el) {\n        // Remove Event Listeners\n        document.removeEventListener('click', el.__vueClickOutside__);\n        el.__vueClickOutside__ = null;\n      },\n    },\n  },\n  props: {\n    messages: {\n      type: [Array, String],\n    },\n    errorMessages: {\n      type: [Array, String],\n    },\n    successMessages: {\n      type: [Array, String],\n    },\n    hint: {\n      type: String,\n    },\n    suffix: {\n      type: String,\n    },\n    prefix: {\n      type: String,\n    },\n    appendIcon: {\n      type: String,\n      default: '',\n    },\n    backgroundColor: {\n      type: String,\n    },\n    color: {\n      type: String,\n    },\n    rules: {\n      type: Array,\n      default: () => [],\n    },\n    loaderHeight: {\n      type: [Number, String],\n      default: 2,\n    },\n    loading: {\n      type: [Boolean, String],\n      default: false,\n    },\n    hideDetails: {\n      type: [Boolean, String],\n    },\n    clearable: {\n      type: Boolean,\n      default: false,\n    },\n    filled: {\n      type: Boolean,\n      default: false,\n    },\n    fullWidth: {\n      type: Boolean,\n      default: false,\n    },\n    flat: {\n      type: Boolean,\n      default: false,\n    },\n    light: {\n      type: Boolean,\n      default: false,\n    },\n    dark: {\n      type: Boolean,\n      default: false,\n    },\n    validateOnBlur: {\n      type: Boolean,\n      default: false,\n    },\n    outlined: {\n      type: Boolean,\n      default: false,\n    },\n    dense: {\n      type: Boolean,\n      default: false,\n    },\n    persistentHint: {\n      type: Boolean,\n      default: false,\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n    error: {\n      type: Boolean,\n      default: false,\n    },\n    success: {\n      type: Boolean,\n      default: false,\n    },\n    shaped: {\n      type: Boolean,\n      default: false,\n    },\n    singleLine: {\n      type: Boolean,\n      default: false,\n    },\n    rounded: {\n      type: Boolean,\n      default: false,\n    },\n    inputHeight: {\n      type: String,\n      default: '',\n    },\n    value: {\n      type: String,\n      default: '',\n    },\n    label: {\n      type: String,\n      default: () => getDefault('label'),\n    },\n    selectLabel: {\n      type: String,\n      default: '',\n    },\n    menuProps: {\n      type: [String, Array, Object],\n      default: () => {},\n    },\n    placeholder: {\n      type: String,\n      default: () => getDefault('placeholder'),\n    },\n    persistentPlaceholder: {\n      type: Boolean,\n      default: false,\n    },\n    disabledFetchingCountry: {\n      type: Boolean,\n      default: () => getDefault('disabledFetchingCountry'),\n    },\n    disabled: {\n      type: Boolean,\n      default: () => getDefault('disabled'),\n    },\n    mode: {\n      type: String,\n      default: () => getDefault('mode'),\n    },\n    invalidMsg: {\n      type: String,\n      default: () => getDefault('invalidMsg'),\n    },\n    required: {\n      type: Boolean,\n      default: () => getDefault('required'),\n    },\n    allCountries: {\n      type: Array,\n      default: () => getDefault('allCountries'),\n    },\n    defaultCountry: {\n      // Default country code, ie: 'AU'\n      // Will override the current country of user\n      type: String,\n      default: () => getDefault('defaultCountry'),\n    },\n    preferredCountries: {\n      type: Array,\n      default: () => getDefault('preferredCountries'),\n    },\n    onlyCountries: {\n      type: Array,\n      default: () => getDefault('onlyCountries'),\n    },\n    ignoredCountries: {\n      type: Array,\n      default: () => getDefault('ignoredCountries'),\n    },\n    autocomplete: {\n      type: String,\n      default: () => getDefault('autocomplete'),\n    },\n    autofocus: {\n      type: Boolean,\n      default: () => getDefault('autofocus'),\n    },\n    name: {\n      type: String,\n      default: () => getDefault('name'),\n    },\n    wrapperClasses: {\n      type: [String, Array, Object],\n      default: () => getDefault('wrapperClasses'),\n    },\n    textFieldClasses: {\n      type: [String, Array, Object],\n      default: () => '',\n    },\n    selectClasses: {\n      type: [String, Array, Object],\n      default: () => '',\n    },\n    inputClasses: {\n      type: [String, Array, Object],\n      default: () => '',\n    },\n    inputId: {\n      type: String,\n      default: () => getDefault('inputId'),\n    },\n    inputOptions: {\n      type: Object,\n      default: () => getDefault('inputOptions'),\n    },\n    maxLen: {\n      type: Number,\n      default: () => getDefault('maxLen'),\n    },\n  },\n  data() {\n    return {\n      phone: '',\n      activeCountry: { iso2: '' },\n      open: false,\n      finishMounted: false,\n      selectedIndex: null,\n      typeToFindInput: '',\n      typeToFindTimer: null,\n      cursorPosition: 0,\n      countryCode: null,\n    };\n  },\n  computed: {\n    parsedMode() {\n      if (this.mode) {\n        if (!['international', 'national'].includes(this.mode)) {\n          console.error('Invalid value of prop \"mode\"');\n        } else {\n          return this.mode;\n        }\n      }\n      if (!this.phone || this.phone[0] !== '+') {\n        return 'national';\n      }\n      return 'international';\n    },\n    filteredCountries() {\n      // List countries after filtered\n      if (this.onlyCountries.length) {\n        return this.getCountries(this.onlyCountries);\n      }\n      if (this.ignoredCountries.length) {\n        return this.allCountries.filter(\n          ({ iso2 }) => !this.ignoredCountries.includes(iso2.toUpperCase())\n            && !this.ignoredCountries.includes(iso2.toLowerCase()),\n        );\n      }\n      return this.allCountries;\n    },\n    sortedCountries() {\n      // Sort the list countries: from preferred countries to all countries\n      const preferredCountries = this.getCountries(this.preferredCountries).map(\n        country => ({\n          ...country,\n          preferred: true,\n        }),\n      );\n      return [...preferredCountries, ...this.filteredCountries];\n    },\n    phoneObject() {\n      const result = PhoneNumber(\n        this.phone || '',\n        this.activeCountry.iso2,\n      ).toJSON();\n      Object.assign(result, {\n        isValid: result.valid,\n        country: this.activeCountry,\n      });\n      if (!this.phone) {\n        return {\n          ...result,\n          number: {\n            input: '',\n          },\n        };\n      }\n      return result;\n    },\n    phoneText() {\n      let key = 'input';\n      if (this.phoneObject.valid) {\n        key = this.parsedMode;\n      }\n      return this.phoneObject.number[key] || '';\n    },\n  },\n  watch: {\n    // eslint-disable-next-line func-names\n    'phoneObject.valid': function (value) {\n      if (value) {\n        this.phone = this.phoneText;\n      }\n      this.$emit('validate', this.phoneObject);\n      this.$emit('onValidate', this.phoneObject); // Deprecated\n    },\n    value() {\n      this.phone = this.value;\n    },\n    open(isDropdownOpened) {\n      // Emit open and close events\n      if (isDropdownOpened) {\n        this.$emit('open');\n      } else {\n        this.$emit('close');\n      }\n    },\n    phone(newValue, oldValue) {\n      if (newValue) {\n        if (newValue[0] === '+') {\n          const code = PhoneNumber(newValue).getRegionCode();\n          if (code) {\n            this.activeCountry = this.findCountry(code) || this.activeCountry;\n          }\n        }\n      }\n      // Reset the cursor to current position if it's not the last character.\n      if (oldValue && this.cursorPosition < oldValue.length) {\n        this.$nextTick(() => {\n          setCaretPosition(this.$refs.input, this.cursorPosition);\n        });\n      }\n\n      this.$emit('input', this.phoneText, this.phoneObject);\n    },\n    activeCountry(value) {\n      if (value && value.iso2) {\n        this.$emit('country-changed', value);\n      }\n    },\n  },\n  mounted() {\n    this.$watch('$refs.countryInput.isResetting', v => v && this.reset());\n    this.reset();\n  },\n  created() {\n    if (this.value) {\n      this.phone = this.value.trim();\n    }\n  },\n  methods: {\n    initializeCountry() {\n      return new Promise((resolve) => {\n        /**\n         * 1. If the phone included prefix (+12), try to get the country and set it\n         */\n        if (this.phone && this.phone[0] === '+') {\n          const activeCountry = PhoneNumber(this.phone).getRegionCode();\n          if (activeCountry) {\n            this.choose(activeCountry);\n            resolve();\n            return;\n          }\n        }\n        /**\n         * 2. Use default country if passed from parent\n         */\n        if (this.defaultCountry) {\n          const defaultCountry = this.findCountry(this.defaultCountry);\n          if (defaultCountry) {\n            this.choose(defaultCountry);\n            resolve();\n            return;\n          }\n        }\n        const fallbackCountry = this.findCountry(this.preferredCountries[0])\n          || this.filteredCountries[0];\n        /**\n         * 3. Check if fetching country based on user's IP is allowed, set it as the default country\n         */\n        if (!this.disabledFetchingCountry) {\n          getCountry()\n            .then((res) => {\n              if (this.phone === '') {\n                this.activeCountry = this.findCountry(res) || this.activeCountry;\n              }\n            })\n            .catch((error) => {\n              console.warn(error);\n              /**\n               * 4. Use the first country from preferred list (if available) or all countries list\n               */\n              this.choose(fallbackCountry);\n            })\n            .finally(() => {\n              resolve();\n            });\n        } else {\n          /**\n           * 4. Use the first country from preferred list (if available) or all countries list\n           */\n          this.choose(fallbackCountry);\n          resolve();\n        }\n      });\n    },\n    /**\n     * Get the list of countries from the list of iso2 code\n     */\n    getCountries(list = []) {\n      return list\n        .map(countryCode => this.findCountry(countryCode))\n        .filter(Boolean);\n    },\n    findCountry(iso = '') {\n      return this.allCountries.find(\n        country => country.iso2 === iso.toUpperCase(),\n      );\n    },\n    getItemClass(index, iso2) {\n      const highlighted = this.selectedIndex === index;\n      const lastPreferred = index === this.preferredCountries.length - 1;\n      const preferred = this.preferredCountries.some(\n        c => c.toUpperCase() === iso2,\n      );\n      return {\n        highlighted,\n        'last-preferred': lastPreferred,\n        preferred,\n      };\n    },\n    choose(country, toEmitInputEvent = false) {\n      this.activeCountry = country || this.activeCountry || {};\n      if (\n        this.phone\n        && this.phone[0] === '+'\n        && this.activeCountry.iso2\n        && this.phoneObject.number.significant\n      ) {\n        // Attach the current phone number with the newly selected country\n        this.phone = PhoneNumber(\n          this.phoneObject.number.significant,\n          this.activeCountry.iso2,\n        ).getNumber('international');\n      } else if (\n        this.inputOptions\n        && this.inputOptions.showDialCode\n        && country\n      ) {\n        // Reset phone if the showDialCode is set\n        this.phone = `+${country.dialCode}`;\n      }\n      if (toEmitInputEvent) {\n        this.$emit('input', this.phoneText, this.phoneObject);\n        this.$emit('onInput', this.phoneObject); // Deprecated\n      }\n    },\n    onInput(e) {\n      // this.$refs.input.setCustomValidity(\n      //   this.phoneObject.valid ? \"\" : this.invalidMsg\n      // );\n      // Returns response.number to assign it to v-model (if being used)\n      // Returns full response for cases @input is used\n      // and parent wants to return the whole response.\n      this.$emit('input', this.phoneText, this.phoneObject);\n      this.$emit('onInput', this.phoneObject); // Deprecated\n      // Keep the current cursor position just in case the input reformatted\n      // and it gets moved to the last character.\n      if (e && e.target) {\n        this.cursorPosition = e.target.selectionStart;\n      }\n    },\n    onBlur() {\n      this.$emit('blur');\n      this.$emit('onBlur'); // Deprecated\n    },\n    onFocus(event) {\n      this.$emit('focus', event);\n    },\n    onClick(event) {\n      this.$emit('click', event);\n    },\n    onChange(value) {\n      this.$emit('change', value);\n    },\n    onMouseUp(event) {\n      this.$emit('mouseup', event);\n    },\n    onMouseDown(event) {\n      this.$emit('mousedown', event);\n    },\n    onKeyDown(event) {\n      this.$emit('keydown', event);\n    },\n    onEnter() {\n      this.$emit('enter');\n      this.$emit('onEnter'); // Deprecated\n    },\n    onSpace() {\n      this.$emit('space');\n      this.$emit('onSpace'); // Deprecated\n    },\n    focus() {\n      this.$refs.input.focus();\n    },\n    toggleDropdown() {\n      if (this.disabled) {\n        return;\n      }\n      this.open = !this.open;\n    },\n    clickedOutside() {\n      this.open = false;\n    },\n    keyboardNav(e) {\n      if (e.keyCode === 40) {\n        // down arrow\n        e.preventDefault();\n        this.open = true;\n        if (this.selectedIndex === null) {\n          this.selectedIndex = 0;\n        } else {\n          this.selectedIndex = Math.min(\n            this.sortedCountries.length - 1,\n            this.selectedIndex + 1,\n          );\n        }\n        const selEle = this.$refs.list.children[this.selectedIndex];\n        if (\n          selEle.offsetTop + selEle.clientHeight\n          > this.$refs.list.scrollTop + this.$refs.list.clientHeight\n        ) {\n          this.$refs.list.scrollTop = selEle.offsetTop\n            - this.$refs.list.clientHeight\n            + selEle.clientHeight;\n        }\n      } else if (e.keyCode === 38) {\n        // up arrow\n        e.preventDefault();\n        this.open = true;\n        if (this.selectedIndex === null) {\n          this.selectedIndex = this.sortedCountries.length - 1;\n        } else {\n          this.selectedIndex = Math.max(0, this.selectedIndex - 1);\n        }\n        const selEle = this.$refs.list.children[this.selectedIndex];\n        if (selEle.offsetTop < this.$refs.list.scrollTop) {\n          this.$refs.list.scrollTop = selEle.offsetTop;\n        }\n      } else if (e.keyCode === 13) {\n        // enter key\n        if (this.selectedIndex !== null) {\n          this.choose(this.sortedCountries[this.selectedIndex]);\n        }\n        this.open = !this.open;\n      } else {\n        // typing a country's name\n        this.typeToFindInput += e.key;\n        clearTimeout(this.typeToFindTimer);\n        this.typeToFindTimer = setTimeout(() => {\n          this.typeToFindInput = '';\n        }, 700);\n        // don't include preferred countries so we jump to the right place in the alphabet\n        const typedCountryI = this.sortedCountries\n          .slice(this.preferredCountries.length)\n          .findIndex(c => c.name.toLowerCase().startsWith(this.typeToFindInput));\n        if (typedCountryI >= 0) {\n          this.selectedIndex = this.preferredCountries.length + typedCountryI;\n          const selEle = this.$refs.list.children[this.selectedIndex];\n          const needToScrollTop = selEle.offsetTop < this.$refs.list.scrollTop;\n          const needToScrollBottom = selEle.offsetTop + selEle.clientHeight\n            > this.$refs.list.scrollTop + this.$refs.list.clientHeight;\n          if (needToScrollTop || needToScrollBottom) {\n            this.$refs.list.scrollTop = selEle.offsetTop - this.$refs.list.clientHeight / 2;\n          }\n        }\n      }\n    },\n    reset() {\n      this.countryCode = this.activeCountry;\n      this.initializeCountry()\n        .then(() => {\n          if (\n            !this.phone\n            && this.inputOptions\n            && this.inputOptions.showDialCode\n            && this.activeCountry.dialCode\n          ) {\n            this.phone = `+${this.activeCountry.dialCode}`;\n          }\n          this.countryCode = this.activeCountry;\n          this.$emit('validate', this.phoneObject);\n          this.$emit('onValidate', this.phoneObject); // Deprecated\n        })\n        .catch(console.error)\n        .finally(() => {\n          this.finishMounted = true;\n        });\n      this.open = false;\n    },\n    onChangeCountryCode() {\n      this.choose(this.countryCode, true);\n    },\n  },\n};\n</script>\n\n<style src=\"./sprite.css\"></style>\n<style lang=\"scss\">\n.vti__flag {\n  margin-right: 8px;\n}\n\n.vue-tel-input-vuetify {\n  display: flex;\n  align-items: center;\n\n  .country-code {\n    width: 75px;\n  }\n\n  li.last-preferred {\n    border-bottom: 1px solid #cacaca;\n  }\n\n  .v-text-field {\n    .v-select__selections {\n      position: relative;\n      .vti__flag {\n        position: absolute;\n        margin-left: 18px;\n      }\n    }\n    &--outlined {\n      .v-select__selections {\n        .vti__flag {\n          margin-left: auto;\n        }\n      }\n    }\n  }\n}\n</style>\n"]}]}