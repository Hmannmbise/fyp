{"remainingRequest":"/home/edwin/Pictures/FYP_FRONT_END/rit-master/node_modules/babel-loader/lib/index.js!/home/edwin/Pictures/FYP_FRONT_END/rit-master/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/edwin/Pictures/FYP_FRONT_END/rit-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/edwin/Pictures/FYP_FRONT_END/rit-master/src/modules/Authentication/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/edwin/Pictures/FYP_FRONT_END/rit-master/src/modules/Authentication/Login.vue","mtime":1652171403694},{"path":"/home/edwin/Pictures/FYP_FRONT_END/rit-master/babel.config.js","mtime":1649961924000},{"path":"/home/edwin/Pictures/FYP_FRONT_END/rit-master/node_modules/cache-loader/dist/cjs.js","mtime":1651266680411},{"path":"/home/edwin/Pictures/FYP_FRONT_END/rit-master/node_modules/babel-loader/lib/index.js","mtime":1651266681523},{"path":"/home/edwin/Pictures/FYP_FRONT_END/rit-master/node_modules/cache-loader/dist/cjs.js","mtime":1651266680411},{"path":"/home/edwin/Pictures/FYP_FRONT_END/rit-master/node_modules/vue-loader/lib/index.js","mtime":1651266681819}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIi9ob21lL2Vkd2luL1BpY3R1cmVzL0ZZUF9GUk9OVF9FTkQvcml0LW1hc3Rlci9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlci5qcyI7CmltcG9ydCBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsIGZyb20gIi9ob21lL2Vkd2luL1BpY3R1cmVzL0ZZUF9GUk9OVF9FTkQvcml0LW1hc3Rlci9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdGFnZ2VkVGVtcGxhdGVMaXRlcmFsLmpzIjsKCnZhciBfdGVtcGxhdGVPYmplY3Q7CgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgTG9naW5fUGFnZSBmcm9tICIuL0xvZ2luQ29udGVudC52dWUiOyAvLyBjcmVhdGluZyBtdXRhdGlvbiBoZXJlCgppbXBvcnQgZ3FsIGZyb20gImdyYXBocWwtdGFnIjsKaW1wb3J0IHJvdXRlciBmcm9tICIuLi8uLi9yb3V0ZXIiOwp2YXIgTE9HSU5fUVVFUlkgPSBncWwoX3RlbXBsYXRlT2JqZWN0IHx8IChfdGVtcGxhdGVPYmplY3QgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIG11dGF0aW9uICgkZW1haWw6IFN0cmluZyEsICRwYXNzd29yZDogU3RyaW5nISkge1xuICAgIHRva2VuQXV0aChlbWFpbDogJGVtYWlsLCBwYXNzd29yZDogJHBhc3N3b3JkKSB7XG4gICAgICB0b2tlblxuICAgICAgc3VjY2Vzc1xuICAgICAgZXJyb3JzXG4gICAgfVxuICB9XG4iXSkpKTsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJMb2dpbiIsCiAgY29tcG9uZW50czogewogICAgTG9naW5fUGFnZTogTG9naW5fUGFnZQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGVycm9yczogW10KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBsb2dpbkhhbmRsZXI6IGZ1bmN0aW9uIGxvZ2luSGFuZGxlcihkYXRhKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLiRhcG9sbG8ubXV0YXRlKHsKICAgICAgICBtdXRhdGlvbjogTE9HSU5fUVVFUlksCiAgICAgICAgdmFyaWFibGVzOiBkYXRhLAogICAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKGNhY2hlLCBfcmVmKSB7CiAgICAgICAgICB2YXIgZGF0YSA9IF9yZWYuZGF0YTsKICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpOwoKICAgICAgICAgIGlmICghZGF0YS50b2tlbkF1dGguZXJyb3JzKSB7CiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCJ0b2tlbiIsIGRhdGEudG9rZW5BdXRoLnRva2VuKTsKCiAgICAgICAgICAgIHZhciBUb2FzdCA9IF90aGlzLiRzd2FsLm1peGluKHsKICAgICAgICAgICAgICB0b2FzdDogdHJ1ZSwKICAgICAgICAgICAgICBwb3NpdGlvbjogInRvcC1lbmQiLAogICAgICAgICAgICAgIHNob3dDb25maXJtQnV0dG9uOiBmYWxzZSwKICAgICAgICAgICAgICB0aW1lcjogMzAwMCwKICAgICAgICAgICAgICB0aW1lclByb2dyZXNzQmFyOiB0cnVlLAogICAgICAgICAgICAgIGRpZE9wZW46IGZ1bmN0aW9uIGRpZE9wZW4odG9hc3QpIHsKICAgICAgICAgICAgICAgIHRvYXN0LmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlZW50ZXIiLCBfdGhpcy4kc3dhbC5zdG9wVGltZXIpOwogICAgICAgICAgICAgICAgdG9hc3QuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VsZWF2ZSIsIF90aGlzLiRzd2FsLnJlc3VtZVRpbWVyKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgVG9hc3QuZmlyZSh7CiAgICAgICAgICAgICAgaWNvbjogInN1Y2Nlc3MiLAogICAgICAgICAgICAgIHRpdGxlOiAiU2lnbmVkIGluIHN1Y2Nlc3NmdWxseSIKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHJvdXRlci5wdXNoKCIvaG9tZSIpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdmFyIGVycm9ycyA9IFtdOwoKICAgICAgICAgICAgdmFyIF9pdGVyYXRvciA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKGRhdGEudG9rZW5BdXRoLmVycm9ycy5ub25GaWVsZEVycm9ycyksCiAgICAgICAgICAgICAgICBfc3RlcDsKCiAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICAgICAgICAgIHZhciBlID0gX3N0ZXAudmFsdWU7CiAgICAgICAgICAgICAgICBlcnJvcnMucHVzaChlKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgICAgIF9pdGVyYXRvci5lKGVycik7CiAgICAgICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgX3RoaXMuZXJyb3JzID0gZXJyb3JzOwoKICAgICAgICAgICAgdmFyIF9Ub2FzdCA9IF90aGlzLiRzd2FsLm1peGluKHsKICAgICAgICAgICAgICB0b2FzdDogdHJ1ZSwKICAgICAgICAgICAgICBwb3NpdGlvbjogInRvcC1lbmQiLAogICAgICAgICAgICAgIHNob3dDb25maXJtQnV0dG9uOiBmYWxzZSwKICAgICAgICAgICAgICB0aW1lcjogMzAwMCwKICAgICAgICAgICAgICB0aW1lclByb2dyZXNzQmFyOiB0cnVlLAogICAgICAgICAgICAgIGRpZE9wZW46IGZ1bmN0aW9uIGRpZE9wZW4odG9hc3QpIHsKICAgICAgICAgICAgICAgIHRvYXN0LmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlZW50ZXIiLCBfdGhpcy4kc3dhbC5zdG9wVGltZXIpOwogICAgICAgICAgICAgICAgdG9hc3QuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VsZWF2ZSIsIF90aGlzLiRzd2FsLnJlc3VtZVRpbWVyKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgX1RvYXN0LmZpcmUoewogICAgICAgICAgICAgIGljb246ICJ3YXJuaW5nIiwKICAgICAgICAgICAgICB0aXRsZTogIkNyZWRlbnRpYWwgZGlkbid0IG1hdGNoISIKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAmBA,4C,CAEA;;AACA;AACA;AAEA;AAUA;EACAA,aADA;EAEAC;IACAC;EADA,CAFA;EAKAC,IALA,kBAKA;IACA;MACAC;IADA;EAGA,CATA;EAUAC;IACAC,YADA,wBACAH,IADA,EACA;MAAA;;MACA;QACAI,qBADA;QAEAC,eAFA;QAGAC;UAAA;UACAC;;UACA;YACAC;;YACA;cACAC,WADA;cAEAC,mBAFA;cAGAC,wBAHA;cAIAC,WAJA;cAKAC,sBALA;cAMAC;gBACAL;gBACAA;cACA;YATA;;YAYAM;cACAC,eADA;cAEAC;YAFA;YAIAC;UACA,CAnBA,MAmBA;YACA;;YADA,2CAEAlB,oCAFA;YAAA;;YAAA;cAEA;gBAAA;gBACAC;cACA;YAJA;cAAA;YAAA;cAAA;YAAA;;YAKA;;YACA;cACAQ,WADA;cAEAC,mBAFA;cAGAC,wBAHA;cAIAC,WAJA;cAKAC,sBALA;cAMAC;gBACAL;gBACAA;cACA;YATA;;YAYAM;cACAC,eADA;cAEAC;YAFA;UAIA;QACA;MA/CA;IAiDA;EAnDA;AAVA","names":["name","components","Login_Page","data","errors","methods","loginHandler","mutation","variables","update","console","localStorage","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","Toast","icon","title","router"],"sourceRoot":"src/modules/Authentication","sources":["Login.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- <v-alert\n      v-for=\"err of errors\"\n      :key=\"err.code\"\n      border=\"bottom\"\n      color=\"red\"\n      dismissible\n      elevation=\"21\"\n      icon=\"mdi-alert-circle\"\n      type=\"error\"\n    >\n      {{ err.message }}\n    </v-alert> -->\n    <Login_Page @login-handler=\"loginHandler\" />\n  </div>\n</template>\n\n<script>\nimport Login_Page from \"./LoginContent.vue\";\n\n// creating mutation here\nimport gql from \"graphql-tag\";\nimport router from \"../../router\";\n\nconst LOGIN_QUERY = gql`\n  mutation ($email: String!, $password: String!) {\n    tokenAuth(email: $email, password: $password) {\n      token\n      success\n      errors\n    }\n  }\n`;\n\nexport default {\n  name: \"Login\",\n  components: {\n    Login_Page,\n  },\n  data() {\n    return {\n      errors: [],\n    };\n  },\n  methods: {\n    loginHandler(data) {\n      this.$apollo.mutate({\n        mutation: LOGIN_QUERY,\n        variables: data,\n        update: (cache, { data }) => {\n          console.log(data);\n          if (!data.tokenAuth.errors) {\n            localStorage.setItem(\"token\", data.tokenAuth.token);\n            const Toast = this.$swal.mixin({\n              toast: true,\n              position: \"top-end\",\n              showConfirmButton: false,\n              timer: 3000,\n              timerProgressBar: true,\n              didOpen: (toast) => {\n                toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n                toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n              },\n            });\n\n            Toast.fire({\n              icon: \"success\",\n              title: \"Signed in successfully\",\n            });\n            router.push(\"/home\");\n          } else {\n            let errors = [];\n            for (let e of data.tokenAuth.errors.nonFieldErrors) {\n              errors.push(e);\n            }\n            this.errors = errors;\n            const Toast = this.$swal.mixin({\n              toast: true,\n              position: \"top-end\",\n              showConfirmButton: false,\n              timer: 3000,\n              timerProgressBar: true,\n              didOpen: (toast) => {\n                toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n                toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n              },\n            });\n\n            Toast.fire({\n              icon: \"warning\",\n              title: \"Credential didn't match!\",\n            });\n          }\n        },\n      });\n    },\n  },\n};\n</script>\n<style scoped>\n.no-uppercase {\n  text-transform: unset !important;\n}\n</style>\n"]}]}