{"remainingRequest":"/home/edwin/Downloads/rit-master/node_modules/babel-loader/lib/index.js!/home/edwin/Downloads/rit-master/node_modules/vuetify/lib/components/VDatePicker/util/sanitizeDateString.js","dependencies":[{"path":"/home/edwin/Downloads/rit-master/node_modules/vuetify/lib/components/VDatePicker/util/sanitizeDateString.js","mtime":1651266685758},{"path":"/home/edwin/Downloads/rit-master/babel.config.js","mtime":1649961924000},{"path":"/home/edwin/Downloads/rit-master/node_modules/cache-loader/dist/cjs.js","mtime":1651266680411},{"path":"/home/edwin/Downloads/rit-master/node_modules/babel-loader/lib/index.js","mtime":1651266681523}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIi9ob21lL2Vkd2luL0Rvd25sb2Fkcy9yaXQtbWFzdGVyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zbGljZWRUb0FycmF5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwovLyBBZGRzIGxlYWRpbmcgemVybyB0byBtb250aC9kYXkgaWYgbmVjZXNzYXJ5LCByZXR1cm5zICdZWVlZJyBpZiB0eXBlID0gJ3llYXInLAovLyAnWVlZWS1NTScgaWYgJ21vbnRoJyBhbmQgJ1lZWVktTU0tREQnIGlmICdkYXRlJwppbXBvcnQgcGFkIGZyb20gJy4vcGFkJzsKZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIChkYXRlU3RyaW5nLCB0eXBlKSB7CiAgdmFyIF9kYXRlU3RyaW5nJHNwbGl0ID0gZGF0ZVN0cmluZy5zcGxpdCgnLScpLAogICAgICBfZGF0ZVN0cmluZyRzcGxpdDIgPSBfc2xpY2VkVG9BcnJheShfZGF0ZVN0cmluZyRzcGxpdCwgMyksCiAgICAgIHllYXIgPSBfZGF0ZVN0cmluZyRzcGxpdDJbMF0sCiAgICAgIF9kYXRlU3RyaW5nJHNwbGl0MiQgPSBfZGF0ZVN0cmluZyRzcGxpdDJbMV0sCiAgICAgIG1vbnRoID0gX2RhdGVTdHJpbmckc3BsaXQyJCA9PT0gdm9pZCAwID8gMSA6IF9kYXRlU3RyaW5nJHNwbGl0MiQsCiAgICAgIF9kYXRlU3RyaW5nJHNwbGl0MiQyID0gX2RhdGVTdHJpbmckc3BsaXQyWzJdLAogICAgICBkYXRlID0gX2RhdGVTdHJpbmckc3BsaXQyJDIgPT09IHZvaWQgMCA/IDEgOiBfZGF0ZVN0cmluZyRzcGxpdDIkMjsKCiAgcmV0dXJuICIiLmNvbmNhdCh5ZWFyLCAiLSIpLmNvbmNhdChwYWQobW9udGgpLCAiLSIpLmNvbmNhdChwYWQoZGF0ZSkpLnN1YnN0cigwLCB7CiAgICBkYXRlOiAxMCwKICAgIG1vbnRoOiA3LAogICAgeWVhcjogNAogIH1bdHlwZV0pOwp9KTs="},{"version":3,"mappings":";;;;AAAA;AACA;AACA,OAAOA,GAAP,MAAgB,OAAhB;AAEA,gBAAe,UAACC,UAAD,EAAqBC,IAArB,EAAgE;EAC7E,wBAAoCD,UAAU,CAACE,KAAX,CAAiB,GAAjB,CAApC;EAAA;EAAA,IAAOC,IAAP;EAAA;EAAA,IAAaC,KAAb,oCAAqB,CAArB;EAAA;EAAA,IAAwBC,IAAxB,qCAA+B,CAA/B;;EACA,OAAO,UAAGF,IAAH,cAAWJ,GAAG,CAACK,KAAD,CAAd,cAAyBL,GAAG,CAACM,IAAD,CAA5B,EAAqCC,MAArC,CAA4C,CAA5C,EAA+C;IAAED,IAAI,EAAE,EAAR;IAAYD,KAAK,EAAE,CAAnB;IAAsBD,IAAI,EAAE;EAA5B,EAAgCF,IAAhC,CAA/C,CAAP;AAFF","names":["pad","dateString","type","split","year","month","date","substr"],"sourceRoot":"","sources":["../../../../src/components/VDatePicker/util/sanitizeDateString.ts"],"sourcesContent":["// Adds leading zero to month/day if necessary, returns 'YYYY' if type = 'year',\n// 'YYYY-MM' if 'month' and 'YYYY-MM-DD' if 'date'\nimport pad from './pad'\n\nexport default (dateString: string, type: 'date' | 'month' | 'year'): string => {\n  const [year, month = 1, date = 1] = dateString.split('-')\n  return `${year}-${pad(month)}-${pad(date)}`.substr(0, { date: 10, month: 7, year: 4 }[type])\n}\n"]}]}